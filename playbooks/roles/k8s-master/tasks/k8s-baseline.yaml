- name: Kubernetes nodes baseline playbook
  gather_facts: false
  hosts: all
  vars:
    containerd_force_update: false
    kernel_modules: ['br_netfilter', 'overlay']
    kubernetes_app_version: 1.24.7-00
    kubernetes_apps: ['containerd', 'kubeadm', 'kubectl', 'kubelet']
    sysctl_lines: ['net.bridge.bridge-nf-call-ip6tables = 1', 'net.bridge.bridge-nf-call-iptables = 1', 'net.ipv4.ip_forward = 1']
  tasks:
    - name: Collections & Tests
      block:
        - name: Check if Containerd configuration file exists
          ansible.builtin.stat:
            path: /etc/containerd/config.toml
          changed_when: false
          register: config_toml
        - name: Collect data from `lsmod`
          ansible.builtin.command:
            cmd: lsmod
          changed_when: false
          ignore_errors: true
          register: lsmod

    - name: Install Google repo
      block:
        - name: Install Google-GPG-key
          ansible.builtin.apt_key:
            url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
            state: present
        - name: Install Google-repo
          ansible.builtin.apt_repository:
            repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
            state: present

    - name: Install packages
      ansible.builtin.package:
        name:
          - apt-transport-https
          - ca-certificates
          - containerd
          - curl
          - git
          - golang
          - gnupg2
          - jq
          - "kubeadm={{ kubernetes_app_version }}"
          - "kubectl={{ kubernetes_app_version }}"
          - "kubelet={{ kubernetes_app_version }}"
          - software-properties-common
          - vim
          - wget
        state: present
    - name: APT hold packages
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop: "{{ kubernetes_apps }}"
    - name: Load kernel module if needed
      ansible.builtin.command:
        cmd: "modprobe {{ item }}"
      loop: "{{ kernel_modules }}"
      when: "lsmod.stdout.find(item) == -1"
    - name: Maintain /etc/modules-load.d/containerd.conf
      ansible.builtin.lineinfile:
        create: true
        line: "{{ item }}"
        mode: 0644
        path: /etc/modules-load.d/containerd.conf
        state: present
      loop: "{{ kernel_modules }}"
    - name: Create Kubernetes Sysctl configuration file
      ansible.builtin.lineinfile:
        create: true
        line: "{{ item }}"
        mode: 0644
        path: /etc/sysctl.d/99-kubernetes.conf
        state: present
      loop: "{{ sysctl_lines }}"
      notify: Reload sysctl
    - name: Create Containerd directory
      ansible.builtin.file:
        mode: 0755
        path: /etc/containerd
        state: directory
    - name: Containerd configuration
      when: "not config_toml.stat.exists or containerd_force_update | bool"
      block:
        - name: Set Containerd default configuration
          ansible.builtin.shell:
            cmd: "containerd config default > /etc/containerd/config.toml"
          changed_when: true
        - name: Get SystemD status
          ansible.builtin.lineinfile:
            backrefs: true
            line: \g<1>SystemdCgroup = true
            path: /etc/containerd/config.toml
            regexp: '^(.*)SystemdCgroup = false'
            state: present
          notify: Restart Containerd

  handlers:
    - name: Reload sysctl
      ansible.builtin.command:
        cmd: sysctl --system
    - name: Restart Containerd
      ansible.builtin.systemd:
        daemon_reload: true
        enabled: true
        name: containerd
        state: restarted
